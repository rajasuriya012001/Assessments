package com.training.Registration;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

public class EmployeDB {
	static int status = 0;
	public final static String DB_DRIVER_CLASS = "org.postgresql.Driver";
	private static  String DB_URL ="jdbc:postgresql://localhost:5432//vastpro/";
	private static String DB_USER = "postgres";
	private static String DB_PASSWORD ="postgres";
	
	public static Connection getConnection() throws SQLException {
		try
		{
			Class.forName(DB_DRIVER_CLASS);
		}
		catch (ClassNotFoundException e) {
			// TODO: handle exception
			e.printStackTrace();
		}
		Connection connection=DriverManager.getConnection(DB_URL,DB_USER,DB_PASSWORD);
		System.out.println(connection);
		return connection;
	}
	 public static int save(Emp e){  
	        int status=0;  
	        try{  
	            Connection con=EmployeDB.getConnection();  
	            PreparedStatement ps=con.prepareStatement(  
	                         "insert into user10(name,password,email,country) values (?,?,?,?)");  
	            ps.setString(1,e.getName());  
	            ps.setString(2,e.getPassword());  
	            ps.setString(3,e.getEmail());  
	            ps.setString(4,e.getCountry());  
	              
	            status=ps.executeUpdate();  
	              
	            con.close();  
	        }catch(Exception ex){ex.printStackTrace();}  
	          
	        return status;  
	    }  
	    public static int update(Emp e){  
	        int status=0;  
	        try{  
	            Connection con=EmployeDB.getConnection();  
	            PreparedStatement ps=con.prepareStatement(  
	                         "update user10 set name=?,password=?,email=?,country=? where id=?");  
	            ps.setString(1,e.getName());  
	            ps.setString(2,e.getPassword());  
	            ps.setString(3,e.getEmail());  
	            ps.setString(4,e.getCountry());  
	            ps.setInt(5,e.getId());  
	              
	            status=ps.executeUpdate();  
	              
	            con.close();  
	        }catch(Exception ex){ex.printStackTrace();}  
	          
	        return status;  
	    }  
	    public static int delete(int id){  
	        int status=0;  
	        try{  
	            Connection con=EmployeDB.getConnection();  
	            PreparedStatement ps=con.prepareStatement("delete from user10 where id=?");  
	            ps.setInt(1,id);  
	            status=ps.executeUpdate();  
	              
	            con.close();  
	        }catch(Exception e){e.printStackTrace();}  
	          
	        return status;  
	    }  
	    public static Emp getEmployeeById(int id){  
	        Emp e=new Emp();  
	          
	        try{  
	            Connection con=EmployeDB.getConnection();  
	            PreparedStatement ps=con.prepareStatement("select * from user10 where id=?");  
	            ps.setInt(1,id);  
	            ResultSet rs=ps.executeQuery();  
	            if(rs.next()){  
	                e.setId(rs.getInt(1));  
	                e.setName(rs.getString(2));  
	                e.setPassword(rs.getString(3));  
	                e.setEmail(rs.getString(4));  
	                e.setCountry(rs.getString(5));  
	            }  
	            con.close();  
	        }catch(Exception ex){ex.printStackTrace();}  
	          
	        return e;  
	    }  
	    public static List<Emp> getAllEmployees(){  
	        List<Emp> list=new ArrayList<Emp>();  
	          
	        try{  
	            Connection con=EmployeDB.getConnection();  
	            PreparedStatement ps=con.prepareStatement("select * from user10");  
	            ResultSet rs=ps.executeQuery();  
	            while(rs.next()){  
	                Emp e=new Emp();  
	                e.setId(rs.getInt(1));  
	                e.setName(rs.getString(2));  
	                e.setPassword(rs.getString(3));  
	                e.setEmail(rs.getString(4));  
	                e.setCountry(rs.getString(5));  
	                list.add(e);  
	            }  
	            con.close();  
	        }catch(Exception e){e.printStackTrace();}  
	          
	        return list;  
	    }  
	}  

